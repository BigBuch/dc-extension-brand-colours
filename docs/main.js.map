{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chosen-color-summary/chosen-color-summary.component.ts","./src/app/chosen-color-summary/chosen-color-summary.component.html","./src/app/color-list/color-list.component.ts","./src/app/color-list/color-list.component.html","./src/app/color-preview/color-preview.component.ts","./src/app/color-preview/color-preview.component.html","./src/app/icons.module.ts","./src/app/services/brand-color.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { BrandColorService } from './services/brand-color.service';\r\nimport { BrandColors, BrandColor } from './model/brand-colors';\r\n\r\n@Component({\r\n  selector: 'amp-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title: string;\r\n  colors: BrandColors = { name: '', compact: false, perRow: 0, colors: [], groups: [] };\r\n  selectedColor: BrandColor;\r\n\r\n  constructor(private colorSource: BrandColorService) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await this.colorSource.initialize();\r\n    this.colors = this.colorSource.colors;\r\n    this.selectedColor = this.colorSource.selected;\r\n    this.title = this.colorSource.params.title;\r\n  }\r\n\r\n  selectColor(color: BrandColor) {\r\n    this.colorSource.selectColor(color);\r\n    this.selectedColor = this.colorSource.selected;\r\n  }\r\n}\r\n","<div class=\"amp-root__title\" *ngIf=\"title\">{{title}}</div>\r\n<amp-chosen-color-summary [color]=\"selectedColor\" (clear)=\"selectColor(null)\">\r\n\r\n</amp-chosen-color-summary>\r\n<amp-color-list [colors]=\"colors\" (selection)=\"selectColor($event)\" [selectedColor]=\"selectedColor\">\r\n\r\n</amp-color-list>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ChosenColorSummaryComponent } from './chosen-color-summary/chosen-color-summary.component';\r\nimport { ColorListComponent } from './color-list/color-list.component';\r\nimport { ColorPreviewComponent } from './color-preview/color-preview.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { IconsModule } from './icons.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChosenColorSummaryComponent,\r\n    ColorListComponent,\r\n    ColorPreviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatTooltipModule,\r\n    MatRippleModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    IconsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input, Output, OnChanges, EventEmitter } from '@angular/core';\r\nimport { BrandColorService } from '../services/brand-color.service';\r\nimport { BrandColor } from '../model/brand-colors';\r\n\r\n@Component({\r\n  selector: 'amp-chosen-color-summary',\r\n  templateUrl: './chosen-color-summary.component.html',\r\n  styleUrls: ['./chosen-color-summary.component.scss']\r\n})\r\nexport class ChosenColorSummaryComponent implements OnInit, OnChanges {\r\n\r\n  @Input() color: BrandColor;\r\n  @Output() clear: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\r\n  animation: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.animation = null;\r\n    setTimeout(() => {\r\n      this.animation = 'pulse';\r\n    }, 1);\r\n  }\r\n\r\n  signalDelete() {\r\n    this.clear.emit(true);\r\n  }\r\n\r\n}\r\n","<amp-color-preview\r\n  [color]=\"color == null ? null : color.color\"\r\n  class=\"amp-chosen-color-summary__color\"\r\n  [style.animationName]=\"animation\">\r\n</amp-color-preview>\r\n\r\n<div class=\"amp-chosen-color-summary__name\" [style.animationName]=\"animation\">\r\n  {{ color == null ? 'No Colour Selected' : color.name }}\r\n</div>\r\n\r\n<button mat-icon-button aria-label=\"Remove Colour\"\r\n  class = \"amp-chosen-color-summary__delete\"\r\n  (click)=\"signalDelete()\"\r\n  [ngClass]=\"{'amp-chosen-color-summary__delete--hidden': color == null}\">\r\n  <mat-icon svgIcon=\"delete\"></mat-icon>\r\n</button>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, OnDestroy, OnChanges } from '@angular/core';\r\nimport { BrandColors, BrandColor } from '../model/brand-colors';\r\n\r\n@Component({\r\n  selector: 'amp-color-list',\r\n  templateUrl: './color-list.component.html',\r\n  styleUrls: ['./color-list.component.scss']\r\n})\r\nexport class ColorListComponent implements OnInit, OnDestroy, OnChanges {\r\n\r\n  @Input() expanded = false;\r\n  @Input() colors: BrandColors;\r\n  @Input() selectedColor: BrandColor;\r\n  @Output() selection: EventEmitter<BrandColor> = new EventEmitter();\r\n  @ViewChild('list', { static: true }) list: ElementRef<HTMLDivElement>;\r\n  containerHeight = '0px';\r\n  hoverColor: BrandColor;\r\n\r\n  private listener: (ev: UIEvent) => void;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.listener = this.windowResized.bind(this);\r\n    window.addEventListener('resize', this.listener);\r\n    this.updateExpanded();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    setTimeout(() => {\r\n      this.updateExpanded();\r\n    }, 1);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    window.removeEventListener('resize', this.listener);\r\n  }\r\n\r\n  windowResized(event: UIEvent) {\r\n    this.updateExpanded();\r\n  }\r\n\r\n  setHover(color: BrandColor) {\r\n    this.hoverColor = color;\r\n  }\r\n\r\n  isHover(color: BrandColor): boolean {\r\n    return color === this.hoverColor || color === this.selectedColor;\r\n  }\r\n\r\n  isSelected(color: BrandColor): boolean {\r\n    return color === this.selectedColor;\r\n  }\r\n\r\n  selectColor(color: BrandColor) {\r\n    this.selection.emit(color);\r\n  }\r\n\r\n  toggleExpand() {\r\n    this.expanded = !this.expanded;\r\n    this.updateExpanded();\r\n  }\r\n\r\n  updateExpanded() {\r\n    this.containerHeight = (this.expanded ? this.list.nativeElement.clientHeight : 0) + 'px';\r\n  }\r\n\r\n  calculateMaxWidth() {\r\n    if (!this.colors.perRow) {\r\n      return null;\r\n    }\r\n    return this.colors.perRow * (this.colors.compact ? 38 : 50) + 'px';\r\n  }\r\n\r\n}\r\n","<div class=\"amp-color-list__title\"\r\n  [ngClass]=\"{'amp-color-list__title--expanded': expanded, 'amp-color-list__title--failed': colors.failure}\"\r\n  (click)=\"toggleExpand()\">\r\n  <mat-icon>keyboard_arrow_down</mat-icon>\r\n  {{colors.name}}\r\n</div>\r\n<div class=\"amp-color-list__container\" [style.height]=\"containerHeight\">\r\n  <div class=\"amp-color-list__list\" #list [ngClass]=\"{'amp-color-list__list--compact': colors.compact}\" [style.maxWidth]=\"calculateMaxWidth()\">\r\n    <div *ngFor=\"let color of colors.colors\"\r\n      class=\"amp-color-list__item\"\r\n      [ngClass]=\"{'amp-color-list__item--highlight': isHover(color)}\"\r\n      (mouseenter)=\"setHover(color)\"\r\n      (mouseleave)=\"setHover(null)\"\r\n      (click)=\"selectColor(color)\">\r\n      <amp-color-preview matRipple\r\n        [color]=\"color.color\"\r\n        [matTooltip]=\"color.name\"\r\n        [ngClass]=\"{'amp-color-list__color--highlight': isHover(color), 'amp-color-list__color--selected': isSelected(color)}\">\r\n      </amp-color-preview>\r\n      <div class=\"amp-color-list__caption\">{{color.name}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, HostBinding, Host, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amp-color-preview',\r\n  templateUrl: './color-preview.component.html',\r\n  styleUrls: ['./color-preview.component.scss']\r\n})\r\nexport class ColorPreviewComponent implements OnInit, OnChanges {\r\n\r\n  @Input() color: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\n<div [style.backgroundColor]=\"color\" class=\"amp-color-preview__color\"></div>\r\n","import { NgModule } from '@angular/core';\r\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [],\r\n})\r\nexport class IconsModule {\r\n  constructor(private icons: MatIconRegistry, private sanitizer: DomSanitizer) {\r\n    icons.addSvgIcon('delete', sanitizer.bypassSecurityTrustResourceUrl('./assets/icons/ic-asset-delete.svg'));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SDK } from 'dc-extensions-sdk';\r\nimport { ContentClient } from 'dc-delivery-sdk-js';\r\nimport { BrandColors, BrandColor } from '../model/brand-colors';\r\nimport { BrandColorParameters } from '../model/brand-color-parameters';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrandColorService {\r\n\r\n  private sdk: SDK;\r\n  activeColor: string;\r\n  params: BrandColorParameters;\r\n  colors: BrandColors = {\r\n    name: 'Loading...',\r\n    groups: [],\r\n    colors: []\r\n  };\r\n  selected: BrandColor;\r\n  lastHeight: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  async initialize() {\r\n    try {\r\n      // See index.html for sdk init.\r\n      // tslint:disable-next-line: no-string-literal\r\n      const sdk: SDK<string, BrandColorParameters> = await window['extensionsSdkInstance'];\r\n      sdk.frame.startAutoResizer();\r\n\r\n      this.activeColor = await sdk.field.getValue();\r\n      this.selected = (this.activeColor == null) ? null : { name: this.activeColor, color: this.activeColor };\r\n      this.params = { ...sdk.params.installation, ...sdk.params.instance } as BrandColorParameters;\r\n\r\n      const client = new ContentClient({\r\n        account: this.params.account || 'dummy',\r\n        stagingEnvironment: sdk.stagingEnvironment\r\n      });\r\n\r\n      this.colors = (await client.getContentItem(this.params.contentID) as any).body as BrandColors;\r\n      this.sdk = sdk;\r\n\r\n      this.prepareColors();\r\n\r\n      this.selected = this.findExistingColor(this.activeColor);\r\n\r\n      requestAnimationFrame(this.checkHeight.bind(this));\r\n    } catch (e) {\r\n      this.colors = {\r\n        failure: true,\r\n        name: '(Failed to load colours: ' + e.toString() + ')',\r\n        groups: [],\r\n        colors: []\r\n      };\r\n    }\r\n  }\r\n\r\n  private prepareColors() {\r\n    this.colors.colors = this.combineColorGroups(this.params.groups);\r\n\r\n    if (this.params.groups != null && this.params.groups.length > 0) {\r\n      this.colors.name += ` (${ this.params.groups.join(', ') })`;\r\n    }\r\n  }\r\n\r\n  private combineColorGroups(groups: string[]): BrandColor[] {\r\n    if (groups == null) {\r\n      groups = this.colors.groups.map(group => group.name); // When missing, select all groups.\r\n    }\r\n    const groupObjs = groups.map(groupName => this.colors.groups.find(group => group.name.toLowerCase() === groupName.toLowerCase()))\r\n                            .filter(group => group != null)\r\n                            .map(group => group.colors);\r\n    return [].concat.apply([], groupObjs);\r\n  }\r\n\r\n  private getColorKey(color: BrandColor): string {\r\n    return this.params.useNames ? color.name : color.color;\r\n  }\r\n\r\n  selectColor(color: BrandColor) {\r\n    this.activeColor = color == null ? null : this.getColorKey(color);\r\n    this.sdk.field.setValue(this.activeColor);\r\n    this.selected = color;\r\n  }\r\n\r\n  findExistingColor(color: string) {\r\n    let bColor = color == null ? null : this.colors.colors.find(c => this.getColorKey(c).toLowerCase() === color.toLowerCase());\r\n    if (bColor == null && color != null) {\r\n      bColor = { color, name: color };\r\n    }\r\n    return bColor;\r\n  }\r\n\r\n  checkHeight() {\r\n    if (window.document.body.clientHeight !== this.lastHeight) {\r\n      this.lastHeight = window.document.body.clientHeight;\r\n      this.sdk.frame.setHeight(this.lastHeight);\r\n    }\r\n    requestAnimationFrame(this.checkHeight.bind(this));\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}